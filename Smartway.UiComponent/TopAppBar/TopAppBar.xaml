<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:utils="clr-namespace:Smartway.UiComponent.Utils;assembly=Smartway.UiComponent"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             xmlns:layouts="clr-namespace:Smartway.UiComponent.Layouts;assembly=Smartway.UiComponent"
             mc:Ignorable="d"
             x:Class="Smartway.UiComponent.TopAppBar.TopAppBar"
             x:Name="Self">
    <ContentView.Resources>
        <ResourceDictionary>
            <Style x:Key="ImageButton" TargetType="ImageButton">
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="WidthRequest" Value="24"/>
                <Setter Property="Margin" Value="0, 0, 16, 0"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="Source" Value="">
                </Setter>
            </Style>
            <Style x:Key="LabelTitle" TargetType="Label" BasedOn="{StaticResource SemiBoldFont}">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Margin" Value="16, 0, 0, 0"/>
                <Setter Property="HorizontalTextAlignment" Value="Start"/>
                <Setter Property="HorizontalOptions" Value="StartAndExpand"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
            </Style>
            <Style x:Key="ExtraLabel" TargetType="Label" BasedOn="{StaticResource SemiBoldFont}">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0, 1, 0, 0"/>
            </Style>
        </ResourceDictionary>
    </ContentView.Resources>
    <ContentView.Content>
        <Grid Padding="0, 3, 16, 5" ColumnSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <layouts:ClickableItem Padding="16, 0, 0, 0">
                <ImageButton x:Name="ImageButton" Style="{StaticResource ImageButton}"
                         Command="{Binding Source={x:Reference Self}, Path=Command}"
                         Source="{Binding Source={x:Reference Self}, Path=ImageContent}">
                <ImageButton.Triggers>
                    <DataTrigger TargetType="ImageButton"
                                 Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Default">
                        <Setter Property="Source" Value="{utils:ImageResource Source=Smartway.UiComponent.Resources.Images.icon_arrow_back.png }"/>
                    </DataTrigger>
                    <DataTrigger TargetType="ImageButton"
                                 Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Modal">
                        <Setter Property="Source" Value="{utils:ImageResource Source=Smartway.UiComponent.Resources.Images.icon_close.png}"/>
                    </DataTrigger>
                    <DataTrigger TargetType="ImageButton"
                                 Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Custom">
                        <Setter Property="Source" Value="{Binding Source={x:Reference Self}, Path=IconSource}"/>
                    </DataTrigger>
                    <MultiTrigger TargetType="ImageButton">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Default" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IsDarkTheme}" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Source" Value="{utils:ImageResource Source=Smartway.UiComponent.Resources.Images.white_icon_arrow_back.png}"/>
                    </MultiTrigger>
                    <MultiTrigger TargetType="ImageButton">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Modal" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IsDarkTheme}" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Source" Value="{utils:ImageResource Source=Smartway.UiComponent.Resources.Images.white_icon_close.png}"/>
                    </MultiTrigger>
                    <MultiTrigger TargetType="ImageButton">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Custom" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IconSource}" Value="{x:Static system:String.Empty}" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="False"/>
                    </MultiTrigger>
                    <MultiTrigger TargetType="ImageButton">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Custom" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IconSource}" Value="{x:Static system:String.Empty}" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IsDarkTheme}" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="False"/>
                    </MultiTrigger>
                </ImageButton.Triggers>
            </ImageButton>
                <layouts:ClickableItem.Triggers>
                    <MultiTrigger TargetType="layouts:ClickableItem">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Custom" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IconSource}" Value="{x:Static system:String.Empty}" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="False"/>
                    </MultiTrigger>
                    <MultiTrigger TargetType="layouts:ClickableItem">
                        <MultiTrigger.Conditions>
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=Type}" Value="Custom" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IconSource}" Value="{x:Static system:String.Empty}" />
                            <BindingCondition Binding="{Binding Source={x:Reference Self}, Path=IsDarkTheme}" Value="true" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="False"/>
                    </MultiTrigger>
                </layouts:ClickableItem.Triggers>
            </layouts:ClickableItem>
            <Label Grid.Column="1"
                   Style="{StaticResource LabelTitle}"
                   Text="{Binding Source={x:Reference Self}, Path=Title}"/>
            <Label Grid.Column="2"
                       Style="{StaticResource ExtraLabel}"
                       Text="{Binding Source={x:Reference Self}, Path=ExtraNavigationLabel}">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                     Binding="{Binding Source={x:Reference Self}, Path=ExtraNavigationLabel}" Value="">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </Label.Triggers>
                <Label.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding Source={x:Reference Self}, Path=ExtraNavigationCommand}"/>
                </Label.GestureRecognizers>
            </Label>
        </Grid>
    </ContentView.Content>
</ContentView>
