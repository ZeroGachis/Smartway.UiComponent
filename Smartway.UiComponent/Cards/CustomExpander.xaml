<?xml version="1.0" encoding="utf-8" ?>
<toolkit:Expander
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:resources="clr-namespace:Smartway.UiComponent.Resources;assembly=Smartway.UiComponent"
    xmlns:icons="clr-namespace:Smartway.UiComponent.Labels.Icons;assembly=Smartway.UiComponent"
    xmlns:toolkit="http://xamarin.com/schemas/2020/toolkit"
    x:Class="Smartway.UiComponent.Cards.CustomExpander"
    x:Name="Self"
    IsExpanded="{Binding Path=IsExpanded, Source={x:Reference Self}}"
    State="{Binding Path=State, Source={x:Reference Self}}"
    ForceUpdateSizeCommand="{Binding Path=ForceUpdateSizeCommand, Source={x:Reference Self}}"
    Command="{Binding Path=Command, Source={x:Reference Self}}" Margin="0">
    <toolkit:Expander.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <resources:Colors />
                <ResourceDictionary>
                    <Style TargetType="Label" x:Key="TitleLabel">
                        <Setter Property="TextColor" Value="Black" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="VerticalTextAlignment" Value="Center" />
                        <Style.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference Self}, Path=Status}" Value="warning">
                                <Setter Property="TextColor" Value="{StaticResource ZgBrightOrange}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Label" x:Key="CounterLabel" BasedOn="{StaticResource SemiBoldFont}">
                        <Setter Property="TextColor" Value="{StaticResource ZgMediumGrey}" />
                        <Setter Property="FontSize" Value="14" />
                        <Setter Property="VerticalTextAlignment" Value="Center" />
                        <Style.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference Self}, Path=Status}" Value="warning">
                                <Setter Property="TextColor" Value="{StaticResource ZgBrightOrange}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type icons:Icon}" x:Key="DropDownIcon">
                        <Setter Property="VerticalOptions" Value="Center" />
                        <Setter Property="Value" Value="ArrowDropDown" />
                        <Setter Property="FontSize" Value="24" />
                        <Setter Property="TextColor" Value="Black" />
                        <Style.Triggers>
                            <DataTrigger TargetType="{x:Type icons:Icon}" Binding="{Binding Source={x:Reference Self}, Path=Status}" Value="warning">
                                <Setter Property="TextColor" Value="{StaticResource ZgBrightOrange}" />
                            </DataTrigger>
                            <DataTrigger TargetType="{x:Type icons:Icon}" Binding="{Binding Source={x:Reference Self}, Path=IsExpanded}" Value="true">
                                <Setter Property="Value" Value="ArrowDropUp" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type icons:Icon}" x:Key="WarningIcon">
                        <Setter Property="FontSize" Value="24" />
                        <Setter Property="Margin" Value="0,0,10,0" />
                        <Setter Property="IsVisible" Value="false" />
                        <Setter Property="VerticalOptions" Value="Center" />
                        <Setter Property="TextColor" Value="{StaticResource ZgBrightOrange}" />
                        <Setter Property="Value" Value="Warning" />
                        <Style.Triggers>
                            <DataTrigger TargetType="{x:Type icons:Icon}" Binding="{Binding Source={x:Reference Self}, Path=Status}" Value="warning">
                                <Setter Property="IsVisible" Value="true" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="Grid" x:Key="Header">
                        <Setter Property="HeightRequest" Value="22" />
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </toolkit:Expander.Resources>
    <toolkit:Expander.Header>
        <Grid Style="{StaticResource Header}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="24"/>
                <ColumnDefinition Width="24"/>
            </Grid.ColumnDefinitions>
            <FlexLayout Grid.Column="0">
                <icons:Icon IsVisible="false" HorizontalOptions="Start" Style="{StaticResource WarningIcon}" />
                <Label Text="{Binding Path=Title, Source={x:Reference Self}}" Style="{StaticResource TitleLabel}"/>
            </FlexLayout>
            <Label Grid.Column="1" Text="{Binding Path=Counter, Source={x:Reference Self}}"  HorizontalOptions="End"  Style="{StaticResource CounterLabel}"/>
            <icons:Icon Grid.Column="2" Style="{StaticResource DropDownIcon}"/>
        </Grid>
    </toolkit:Expander.Header>
</toolkit:Expander>