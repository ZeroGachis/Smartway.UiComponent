<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:separators="clr-namespace:Smartway.UiComponent.Separators;assembly=Smartway.UiComponent"
             xmlns:utils="clr-namespace:Smartway.UiComponent.Utils;assembly=Smartway.UiComponent"
             xmlns:icons="clr-namespace:Smartway.UiComponent.Labels.Icons;assembly=Smartway.UiComponent"
             xmlns:resources="clr-namespace:Smartway.UiComponent.Resources;assembly=Smartway.UiComponent"
             x:Class="Smartway.UiComponent.Inputs.FormEntry"
             x:Name="Self">
    <ContentView.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <resources:Colors />
                <ResourceDictionary>
                    <Style x:Key="Title" TargetType="Label" BasedOn="{StaticResource SemiBoldFont}">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="TextColor" Value="Black"/>
                        <Setter Property="Margin" Value="0,0,0,6"/>
                    </Style>
                    <Style x:Key="PrefixLabel" TargetType="Label">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Margin" Value="0,0,10,5"/>
                        <Setter Property="HorizontalTextAlignment" Value="Center"/>
                        <Setter Property="VerticalTextAlignment" Value="Center"/>
                    </Style>
                    <Style x:Key="CustomEntry" TargetType="Entry">
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="PlaceholderColor" Value="{StaticResource ZgMediumGrey}"/>
                        <Setter Property="Margin" Value="0,0,0,5"/>
                    </Style>
                    <Style x:Key="Helper" TargetType="Label">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="TextColor" Value="{StaticResource ZgDarkGrey}"/>
                        <Setter Property="Margin" Value="0,3,0,0"/>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ContentView.Resources>
    <ContentView.Content>
        <StackLayout Spacing="0">
            <Grid ColumnSpacing="0" RowSpacing="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="26" x:Name="LabelDivider"/>
                    <RowDefinition Height="25" x:Name="Entry"/>
                    <RowDefinition Height="1" x:Name="SeparatorDivider"/>
                    <RowDefinition Height="Auto" x:Name="HelpText"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0"  x:Name="EntryTitle" Text="{Binding Source={x:Reference Self}, Path=Title}" Style="{StaticResource Title}"/>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="32" />
                    </Grid.ColumnDefinitions>
                    <Label  Grid.Column="0" x:Name="EntryPrefix" Style="{StaticResource PrefixLabel}" Text="{Binding Source={x:Reference Self}, Path=Prefix}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference Self}, Path=Prefix}" Value="">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Entry
                        Grid.Column="1"
                        x:Name="CustomEntry"
                        Style="{StaticResource CustomEntry}"
                        Text="{Binding Source={x:Reference Self}, Path=Text}"
                        Placeholder="{Binding Source={x:Reference Self}, Path=PlaceHolder}"
                        Keyboard="{Binding Source={x:Reference Self}, Path=Keyboard}"
                        Focused="InputOnFocused"
                        IsPassword="{Binding Source={x:Reference Self}, Path=IsPassword}"
                        Unfocused="InputOnUnfocused"
                        >
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding Source={x:Reference Self}, Path=ReadOnly}" Value="True">
                                <Setter Property="IsReadOnly" Value="True"/>
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <BoxView Grid.Column="1" IsVisible="False" BackgroundColor="Transparent" HeightRequest="0">
                        <BoxView.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference Self}, Path=EntryType}" Value="Select">
                                <Setter Property="IsVisible" Value="True"/>
                            </DataTrigger>
                        </BoxView.Triggers>

                        <BoxView.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={x:Reference Self}, Path=OnSelectTap}"/>
                        </BoxView.GestureRecognizers>
                    </BoxView>
                    <icons:Icon Grid.Column="2"
                                x:Name="EntryArrow"
                                IsVisible="False"
                                TextColor="Black"
                                Value="ArrowDropDown">
                        <icons:Icon.Triggers>
                            <DataTrigger TargetType="{x:Type icons:Icon}" Binding="{Binding Source={x:Reference Self}, Path=EntryType}" Value="Select">
                                <Setter Property="IsVisible" Value="True"/>
                            </DataTrigger>
                        </icons:Icon.Triggers>
                    </icons:Icon>
                </Grid>
                <Grid Grid.Row="2">
                    <separators:Divider x:Name="EntryDividerInput">
                        <separators:Divider.Triggers>
                            <DataTrigger TargetType="BoxView" Binding="{Binding Source={x:Reference Self}, Path=ReadOnly}" Value="True">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </separators:Divider.Triggers>
                    </separators:Divider>
                </Grid>
                <Label Grid.Row="3" x:Name="EntryHelper" Style="{StaticResource Helper}" Text="{Binding Source={x:Reference Self}, Path=Helper}" HeightRequest="18">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference Self}, Path=Helper}" Value="">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference Self}, Path=ReadOnly}" Value="True">
                            <Setter Property="IsVisible" Value="False"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label" Binding="{Binding Source={x:Reference Self}, Path=Error}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource ZgBrightRed}"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </Grid>
        </StackLayout>
    </ContentView.Content>
</ContentView>